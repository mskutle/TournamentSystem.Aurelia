{"version":3,"sources":["services/base-api-service.ts","app.ts","environment.ts","main.ts","custom-elements/loading-indicator.ts","home/index.ts","models/base-model.ts","models/person.ts","models/team.ts","models/player.ts","models/tournamentType.ts","models/tournament.ts","pages/teams.ts","pages/tournaments.ts","resources/index.ts","services/player-service.ts","services/team-service.ts","services/tournament-service.ts","validation/bootstrap-form-renderer.ts","components/teams/team-details.ts","components/teams/teams-create.ts","components/teams/teams-list.ts","components/tournaments/tournament-details.ts","components/tournaments/tournaments-create.ts","components/tournaments/tournaments-list.ts","resources/value-converters/date-format.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { HttpClient } from 'aurelia-fetch-client';\nimport { inject } from 'aurelia-framework';\n\n@inject(HttpClient)\nexport class BaseApiService {\n\n    baseUrl: string = \"http://localhost:3000/api/\";\n    httpClient: HttpClient;\n\n    constructor(httpClient: HttpClient) {\n        \n        this.httpClient = httpClient;\n        \n        this.httpClient.configure(config => {\n            config\n                .withBaseUrl(this.baseUrl)\n                .withDefaults({\n                    headers: {\n                        'Accept':'application/json'\n                    }\n                })\n        });\n    }\n\n    get isRequesting(): boolean {\n        return this.httpClient.isRequesting;\n    }\n}","import {RouterConfiguration, Router} from 'aurelia-router';\nimport { inject } from 'aurelia-framework';\nimport { BaseApiService } from './services/base-api-service';\n\n@inject(BaseApiService)\nexport class App {\n  \n  router: Router;\n  api: BaseApiService;\n\n  constructor(api: BaseApiService) {\n\t  this.api = api;\n  }\n\n  configureRouter(config: RouterConfiguration, router: Router): void {\n      this.router = router;\n\n      config.title = \"TournamentSystem\"\n      config.map([\n        { route: ['', 'home'],  name: 'home',   moduleId: 'home/index',   nav: true,  title: 'Hjem' },\n        { route: 'tournaments',  name: 'tournaments',  moduleId: 'pages/tournaments',  nav: true,  title: 'Turneringer'}, \n        { route: 'tournaments/:id',  name: 'tournament-details',  moduleId: 'components/tournaments/tournament-details', nav: false },\n        { route: 'teams',   name: 'teams',  moduleId: 'pages/teams',  nav: true,  title: 'Lag'},\n        { route: 'teams/:id',   name: 'team-details',   moduleId: 'components/teams/team-details',  nav: false }\n      ])\n  }\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources')\n    .plugin('aurelia-validation')\n    .plugin('aurelia-fetch-client');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import * as nprogress from 'nprogress';\nimport {bindable, noView} from 'aurelia-framework';\n\n@noView(['nprogress/nprogress.css'])\nexport class LoadingIndicator {\n  @bindable loading = false;\n\n  loadingChanged(newValue) {\n    if (newValue) {\n      nprogress.start();\n    } else {\n      nprogress.done();\n    }\n  }\n}","\nexport class Index {\n    \n}","import * as moment from 'moment';\n\nexport class BaseModel {\n    _id: string;\n    createdAt: moment.Moment;\n    lastChangedAt: moment.Moment;\n}","import * as moment from 'moment';\nimport { BaseModel } from \"./base-model\";\n\nexport class Person extends BaseModel {\n\n    firstname: string;\n    lastname: string;\n    dateOfBirth: moment.Moment;\n\n    get fullName(): string {\n        return this.firstname + ' ' + this.lastname;\n    }\n}","import { Person } from './person';\nimport { Player } from './player';\nimport { BaseModel } from './base-model';\n\nexport class Team extends BaseModel {\n    name: string;\n    owner: Person;\n    players: Array<Player>;\n\n    constructor(name: string) {\n        super();\n        this.name = name;\n    }\n}","import { Person } from './person';\nimport { Team } from './team';\n\nexport class Player extends Person {\n    \n    teamId: string;\n}","export enum TournamentType {\n    Cup = 1,\n    League = 2\n}","import * as moment from 'moment';\nimport { Team } from './team';\nimport { BaseModel } from './base-model';\n\nexport class Tournament extends BaseModel {\n    \n    name: string;\n    startDate: moment.Moment;\n    endDate: moment.Moment;\n    teams: Array<Team>;\n    tournamentType: string;\n\n    constructor(name: string, type: string, startDate: moment.Moment, endDate: moment.Moment) {\n\n        super();\n\n        this.name = name;\n        this.tournamentType = type;\n        this.startDate = startDate;\n        this.endDate = endDate;\n    }\n\n    get numberOfTeams() {\n        return this.teams.length;\n    }\n}","export class Teams {\n\n    heading: string = \"Lag\";\n}","\nexport class Tournaments {\n    heading: string = \"Turneringer\"; \n}","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  config.globalResources('./value-converters/date-format');\n}\n","import { BaseApiService } from './base-api-service';\nimport { json } from 'aurelia-fetch-client';\nimport { Player } from '../models/player';\n\nexport class PlayerService extends BaseApiService {\n    \n    async getAll(): Promise<Array<Player>> {\n        \n        let response = await this.httpClient.fetch('players', {\n            method: 'get'\n        });\n\n        return response.json();\n    }\n\n    async update(player: Player): Promise<Player> {\n\n        let response = await this.httpClient.fetch(`players/${player._id}`, {\n            method: 'put',\n            body: json(player)\n        });\n\n        return response.json();\n    }\n}","import { BaseApiService } from './base-api-service';\nimport { Team } from '../models/team';\nimport { json } from 'aurelia-fetch-client';\n\nexport class TeamService extends BaseApiService {\n\n    async getAll(): Promise<Array<Team>> {\n        let response = await this.httpClient.fetch('teams', {\n            method: 'get'\n        });\n\n        return response.json();\n    }\n\n    async add(team: Team): Promise<Team> {\n\n        let response = await this.httpClient.fetch('teams', {\n            method: 'post',\n            body: json(team)\n        });\n\n        return response.json();\n    }\n\n    async delete(team: Team) {\n        \n        let response = await this.httpClient.fetch('teams', {\n            method: 'delete',\n            body: json(team)\n        });\n    }\n\n    async getById(id: string): Promise<Team> {\n        \n        let response = await this.httpClient.fetch(`teams/${id}`, {\n            method: 'get'\n        });\n\n        return response.json();\n    }\n}","import { BaseApiService } from './base-api-service';\nimport { Tournament } from '../models/tournament';\nimport { json } from 'aurelia-fetch-client';\nimport { Team } from '../models/team';\n\nexport class TournamentService extends BaseApiService {\n\n    async getAll(): Promise<Array<Tournament>> {\n        \n        let response = await this.httpClient.fetch('tournaments', {\n            method: 'get'\n        });\n\n        return response.json();\n    }\n\n    async add(tournament: Tournament): Promise<Tournament> {\n\n        let response = await this.httpClient.fetch('tournaments', {\n            method: 'post',\n            body: json(tournament)          \n        });\n\n        return response.json();\n    }\n\n    async delete(tournament: Tournament) {\n\n        let response = await this.httpClient.fetch(`tournaments/${tournament._id}`, {\n            method: 'delete',\n            body: json(tournament)\n        });\n    }\n\n    async getById(id: string): Promise<Tournament> {\n\n        let response = await this.httpClient.fetch(`tournaments/${id}`, {\n            method: 'get'\n        });\n\n        return response.json();\n    }\n\n    async addTeamToTournament(id: string, team: Team): Promise<Tournament> {\n        \n        let response = await this.httpClient.fetch(`tournaments/${id}/teams`, {\n            method: 'post',\n            body: json(team)\n        });\n\n        return response.json();\n    }\n}","import {\n  ValidationRenderer,\n  RenderInstruction,\n  ValidateResult\n} from 'aurelia-validation';\n\nexport class BootstrapFormRenderer {\n  render(instruction: RenderInstruction) {\n    for (let { result, elements } of instruction.unrender) {\n      for (let element of elements) {\n        this.remove(element, result);\n      }\n    }\n\n    for (let { result, elements } of instruction.render) {\n      for (let element of elements) {\n        this.add(element, result);\n      }\n    }\n  }\n\n  add(element: Element, result: ValidateResult) {\n    if (result.valid) {\n      return;\n    }\n\n    const formGroup = element.closest('.form-group');\n    if (!formGroup) {\n      return;\n    }\n\n    // add the has-error class to the enclosing form-group div\n    formGroup.classList.add('has-error');\n\n    // add help-block\n    const message = document.createElement('span');\n    message.className = 'help-block validation-message';\n    message.textContent = result.message;\n    message.id = `validation-message-${result.id}`;\n    formGroup.appendChild(message);\n  }\n\n  remove(element: Element, result: ValidateResult) {\n    if (result.valid) {\n      return;\n    }\n\n    const formGroup = element.closest('.form-group');\n    if (!formGroup) {\n      return;\n    }\n\n    // remove help-block\n    const message = formGroup.querySelector(`#validation-message-${result.id}`);\n    if (message) {\n      formGroup.removeChild(message);\n\n      // remove the has-error class from the enclosing form-group div\n      if (formGroup.querySelectorAll('.help-block.validation-message').length === 0) {\n        formGroup.classList.remove('has-error');\n      }\n    }\n  }\n}","import { inject } from 'aurelia-framework';\nimport { RouteConfig } from 'aurelia-router';\nimport { TeamService } from '../../services/team-service';\nimport { PlayerService } from '../../services/player-service';\nimport { Team } from '../../models/team';\nimport { Player } from '../../models/player';\n\n@inject(TeamService, PlayerService)\nexport class TeamDetails {\n\n    teamService: TeamService;\n    playerService: PlayerService;\n    team: Team;\n    selectablePlayers: Array<Player>;\n    selectedPlayer: Player;\n    routeConfig: RouteConfig;\n\n    constructor(teamService: TeamService, playerService: PlayerService) {\n        this.teamService = teamService;\n        this.playerService = playerService;\n    }\n\n    async addPlayerToTeam() {\n        this.selectedPlayer.teamId = this.team._id;\n        this.playerService.update(this.selectedPlayer);\n    }\n\n    async activate(params, routeConfig: RouteConfig) {\n        this.routeConfig = routeConfig;\n        this.team = await this.teamService.getById(params.id);\n\n        this.routeConfig.navModel.setTitle(this.team.name);\n    }\n\n    async bind() {\n        this.selectablePlayers = await this.playerService.getAll();\n    }\n}","import { ValidationControllerFactory, ValidationController, ValidationRules, validationMessages } from 'aurelia-validation';\nimport { BootstrapFormRenderer } from '../../validation/bootstrap-form-renderer';\nimport { Router } from 'aurelia-router';\nimport { inject } from 'aurelia-framework';\nimport { TeamService } from '../../services/team-service';\nimport { Team } from \"../../models/team\";\n\n@inject(ValidationControllerFactory, TeamService, Router)\nexport class TeamsCreate {\n    \n    controller: ValidationController;\n    teamService: TeamService;\n    router: Router;\n\n    name: string;\n\n    constructor(controllerFactory: ValidationControllerFactory, teamService: TeamService, router: Router) {\n\n        this.teamService = teamService;\n        this.router = router;\n\n        this.controller = controllerFactory.createForCurrentScope();\n        this.controller.addRenderer(new BootstrapFormRenderer());\n    }\n\n    async create() {\n\n        let team = new Team(this.name);\n        let createdTeam: Team = await this.teamService.add(team);\n\n        this.router.navigateToRoute('team-details', { id: createdTeam._id })\n    }\n\n    bind() {\n        ValidationRules\n            .ensure((t: Team) => t.name).displayName('Navn').required()\n            .on(this);\n\n        validationMessages['required'] = `\\${$displayName} er et påkrevd felt.`;\n    }\n}","import { Team } from '../../models/team';\nimport { TeamService } from '../../services/team-service';\nimport { inject } from 'aurelia-framework';\n\n@inject(TeamService)\nexport class TeamsList {\n\n    teams: Array<Team>;\n    teamService: TeamService;\n\n    constructor(teamService: TeamService) {\n        this.teamService = teamService;\n    }\n\n    async bind() {\n        this.teams = await this.teamService.getAll();\n    }\n\n    async deleteTeam(team: Team) {\n        let response = await this.teamService.delete(team);\n        let index = this.teams.indexOf(team);\n        \n        if(index !== -1) {\n            this.teams.splice(index, 1);\n        }\n    }\n}","import { Tournament } from '../../models/tournament';\nimport { inject } from 'aurelia-framework';\nimport { TournamentService } from '../../services/tournament-service';\nimport { Team } from '../../models/team';\nimport { TeamService } from \"../../services/team-service\";\nimport { RouteConfig } from 'aurelia-router';\n\n@inject(TournamentService, TeamService)\nexport class TournamentDetails {\n    \n    teamService: TeamService;\n    tournamentService: TournamentService;\n    tournament: Tournament;\n    selectableTeams: Array<Team>;\n    selectedTeam: Team;\n    routeConfig: RouteConfig;\n\n    constructor(tournamentService: TournamentService, teamService: TeamService) {\n        this.tournamentService = tournamentService;\n        this.teamService = teamService;\n    }\n\n    async addTeamToTournament() {\n        this.tournament = await this.tournamentService.addTeamToTournament(this.tournament._id, this.selectedTeam)\n    }\n\n    async activate(params, routeConfig: RouteConfig) {\n\n        this.routeConfig = routeConfig;\n        this.tournament = await this.tournamentService.getById(params.id);\n\n        this.routeConfig.navModel.setTitle(this.tournament.name);\n    }\n\n    async bind() {\n        this.selectableTeams = await this.teamService.getAll();\n    }\n\n    unbind() {\n        this.selectableTeams = [];\n    }\n\n}","import { ValidationControllerFactory, ValidationController, ValidationRules, validationMessages } from 'aurelia-validation';\nimport { BootstrapFormRenderer } from '../../validation/bootstrap-form-renderer';\nimport { inject } from 'aurelia-framework';\nimport { Router } from 'aurelia-router';\nimport { Tournament } from '../../models/tournament';\nimport { TournamentService } from '../../services/tournament-service';\nimport * as moment from 'moment';\n\n@inject(ValidationControllerFactory, TournamentService, Router)\nexport class TournamentsCreate {\n    \n    controller: ValidationController;\n    tournamentService: TournamentService;\n    router: Router;\n\n    name: string;\n    startDate: moment.Moment;\n    endDate: moment.Moment;\n    tournamentType: string;\n\n    constructor(controllerFactory: ValidationControllerFactory, tournamentService: TournamentService, router: Router) {\n\n        this.tournamentService = tournamentService;\n        this.router = router;\n\n        this.controller = controllerFactory.createForCurrentScope();\n        this.controller.addRenderer(new BootstrapFormRenderer());\n    }\n\n    async create() {\n\n        let tournament = new Tournament(this.name, this.tournamentType, this.startDate, this.endDate);\n\n        try {\n            \n            let createdTournament: Tournament = await this.tournamentService.add(tournament);\n            \n            this.router.navigateToRoute('tournament-details', { id: createdTournament._id });\n\n        } catch(e) {\n            alert(e);\n        }\n        \n    }\n\n    bind() {\n        ValidationRules\n            .ensure((t: Tournament) => t.name).displayName('Navn').required()\n            .ensure((t: Tournament) => t.tournamentType).displayName('Type').required()\n            .ensure((t: Tournament) => t.startDate).displayName('Startdato').required()\n            .ensure((t: Tournament) => t.endDate).displayName('Sluttdato').required()\n            .on(this);\n\n        validationMessages['required'] = `\\${$displayName} er et påkrevd felt.`;\n    }\n}","import { inject } from 'aurelia-framework';\nimport { TournamentService } from '../../services/tournament-service';\nimport { Tournament } from '../../models/tournament';\n\n@inject(TournamentService)\nexport class TournamentsList {\n    \n    tournamentService: TournamentService;\n    tournaments: Array<Tournament>;\n\n    constructor(tournamentService: TournamentService) {\n        this.tournamentService = tournamentService;\n    }\n\n    async bind() {\n        this.tournaments = await this.tournamentService.getAll();\n    }\n\n    unbind() {\n        this.tournaments = [];\n    }\n\n    async deleteTournament(tournament: Tournament) {\n        \n        let response = await this.tournamentService.delete(tournament);\n        let index = this.tournaments.indexOf(tournament);\n        \n        if(index !== -1) {\n            this.tournaments.splice(index, 1);\n        }\n    }\n}","import * as moment from 'moment';\n\nexport class DateFormatValueConverter {\n    \n    toView(value) {\n        return moment(value).format('d.M.YYYY');\n    }\n}"],"sourceRoot":"../src"}